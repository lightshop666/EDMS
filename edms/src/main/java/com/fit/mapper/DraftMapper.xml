<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fit.mapper.DraftMapper">
   <!-- 정환 시작 -->
   <!-- 사원리스트 조회 -->
   <select id="getAllEmp" parameterType="int" resultType="com.fit.vo.EmpInfo">
      SELECT
         emp_no empNo,
         emp_name empName,
         dept_name deptName,
         emp_position empPosition
      FROM emp_info
      WHERE emp_position != 'super'
   </select>
   
   <!-- ExpenseDraftContent 테이블용 -->
   <insert id="insertExpenseDraftContent" parameterType="com.fit.vo.ExpenseDraftContent">
       INSERT INTO expense_draft_content (document_no, expense_category, expense_cost, expense_info)
       VALUES (#{documentNo}, #{expenseCategory}, #{expenseCost}, #{expenseInfo})
   </insert>
   
   <!-- Approval 테이블용 -->
   <insert id="insertApproval" parameterType="com.fit.vo.Approval" >
      <selectKey order="AFTER" keyProperty="approvalNo" resultType="int">
      <!-- order : AFTER로 설정하면, insert 구문을 실행한 뒤 키 값을 조회 -->
      <!-- keyProperty : selectKey 구문의 결과가 셋팅될 대상 프로퍼티 -->
      <!-- resultType : 조회될 키의 타입 -->
         SELECT last_insert_id()
      </selectKey>
      INSERT INTO approval (emp_no, doc_title, first_approval, mediate_approval, final_approval,
           approval_date, approval_reason, approval_state, document_category, approval_field, createdate)
       VALUES (#{empNo}, #{docTitle}, #{firstApproval}, #{mediateApproval}, #{finalApproval},
           #{approvalDate}, #{approvalReason}, #{approvalState}, #{documentCategory}, #{approvalField}, NOW())
   </insert>
   
   <!-- ExpenseDraft 테이블용 -->
   <insert id="insertExpenseDraft" parameterType="com.fit.vo.ExpenseDraft">
       INSERT INTO expense_draft (approval_no,payment_date, doc_title)
       VALUES (#{approvalNo}, #{paymentDate}, #{docTitle})
   </insert>

   
       <!-- 가장 최근의 approval_no 가져오기 -->
    <select id="selectLastInsertedApprovalNo" resultType="int">
        SELECT MAX(approval_no) FROM approval;
    </select>

    <!-- 가장 최근의 document_no 가져오기 -->
    <select id="selectLastInsertedDocumentNo" resultType="int">
        SELECT MAX(document_no) FROM expense_draft;
    </select>
    
   <!-- ExpenseDraft 테이블용 -->
   <select id="selectExpenseDraftByApprovalNo" parameterType="int" resultType="com.fit.vo.ExpenseDraft">
       SELECT
           approval_no as approvalNo,
           payment_date as paymentDate,
           doc_title as docTitle
       FROM expense_draft
       WHERE approval_no = #{approvalNo}
   </select>

   <!-- ExpenseDraftContent 테이블용 -->
   <select id="selectExpenseDraftContentsByApprovalNo" parameterType="int" resultType="com.fit.vo.ExpenseDraftContent">
       SELECT
           document_no as documentNo,
           expense_category as expenseCategory,
           expense_cost as expenseCost,
           expense_info as expenseInfo
       FROM expense_draft_content
       WHERE document_no IN (SELECT document_no FROM expense_draft WHERE approval_no = #{approvalNo})
   </select>
   
   <!-- ReceiveDraft 테이블용 -->
   <select id="selectRecipientIdsByApprovalNo" parameterType="int" resultType="string">
       SELECT emp_info.emp_name empName
       FROM receive_draft
       INNER JOIN emp_info ON receive_draft.emp_no = emp_info.emp_no
       WHERE receive_draft.approval_no = #{approvalNo}
   </select>
   
   <!-- Approval 테이블용 -->
      <select id="selectApprovalByApprovalNo" parameterType="int" resultType="com.fit.vo.Approval">
          SELECT
              a.approval_no as approvalNo,
              a.emp_no as empNo,
              a.doc_title as docTitle,
              e1.emp_name as firstApprovalName,
              e2.emp_name as mediateApprovalName,
              e3.emp_name as finalApprovalName,
              a.first_approval as firstApproval,
              a.mediate_approval as mediateApproval,
              a.final_approval as finalApproval,
              a.approval_date as approvalDate,
              a.approval_reason as approvalReason,
              a.approval_state as approvalState,
              a.document_category as documentCategory,
              a.approval_field as approvalField,
              a.createdate as createDate
          FROM approval a
          LEFT JOIN emp_info e1 ON a.first_approval = e1.emp_no
          LEFT JOIN emp_info e2 ON a.mediate_approval = e2.emp_no
          LEFT JOIN emp_info e3 ON a.final_approval = e3.emp_no
          WHERE a.approval_no = #{approvalNo}
      </select>
   
    <update id="updateApprovalState">
        UPDATE approval
        SET approval_state = #{approvalState}
        WHERE approval_no = #{approvalNo}
    </update>
    
    <update id="updateApprovalStateAndField">
        UPDATE approval
        SET approval_state = #{approvalState},
            approval_field = #{approvalField}
        WHERE approval_no = #{approvalNo}
    </update>
 
    
    <select id="selectDocumentNoByApprovalNo" parameterType="int" resultType="int">
       SELECT document_no FROM expense_draft WHERE approval_no = #{approvalNo}
   </select>
    
   <!-- ExpenseDraft 테이블 수정 -->
   <update id="updateExpenseDraft">
       UPDATE expense_draft
       SET doc_title = #{docTitle},
           payment_date = #{paymentDate}
       WHERE approval_no = #{approvalNo}
   </update>

   <!-- expense_draft_content 테이블에서 데이터 삭제 -->
   <delete id="deleteExpenseDraftContents">
       DELETE FROM expense_draft_content
       WHERE document_no IN (SELECT document_no FROM expense_draft WHERE approval_no = #{approvalNo})
   </delete>

  

   <!-- receive_draft 테이블에서 데이터 삭제 -->
   <delete id="deleteReceiveDrafts">
       DELETE FROM receive_draft
       WHERE approval_no = #{approvalNo}
   </delete>

	<!-- receive_draft 테이블에 데이터 추가 -->
	<insert id="insertReceiveDraft">
	    INSERT INTO receive_draft (approval_no, emp_no, createdate)
	    VALUES (#{approvalNo}, #{empNo}, NOW())
	</insert>
	
	<!-- approval 테이블 수정 -->
	<update id="updateApproval">
	    UPDATE approval
	    SET mediate_approval = #{selectedMiddleApproverId},
	        final_approval = #{selectedFinalApproverId}
	    WHERE approval_no = #{approvalNo}
	</update> 
    
   <!-- 정환 끝 -->
   
   <!-- 희진 -->
   <!-- vacation_draft insert -->
   <insert id="insertVactionDraft" parameterType="com.fit.vo.VacationDraft">
      INSERT INTO vacation_draft (
         approval_no,
         emp_no,
         doc_title,
         doc_content,
         vacation_name,
         vacation_days,
         vacation_start,
         vacation_end,
         phone_number,
         createdate,
         updatedate
      ) VALUES (
         #{approvalNo},
         #{empNo},
         #{docTitle},
         #{docContent},
         #{vacationName},
         #{vacationDays},
         #{vacationStart},
         #{vacationEnd},
         #{phoneNumber},
         NOW(),
         NOW()
      )   
   </insert>
   
   <!-- receive_draft insert -->
   <insert id="insertReceiveDrafts" parameterType="map">
      INSERT INTO receive_draft (
         approval_no,
         emp_no,
         createdate
      ) VALUES
         <!-- 배열을 insert하기 위해 반복문을 이용하여 VALUES 구문을 작성합니다. -->
         <!-- separator을 쉼표(,)로 지정하여 구문이 끝날때마다 ,를 작성하여 각 행을 구분할 수 있습니다. -->
         <foreach collection="recipients" item="empNo" separator=",">
            (#{approvalNo}, #{empNo}, NOW())
         </foreach>
   </insert>
   
   <!-- approval select by approvalNo, empNo -->
   <!-- DTO를 사용하여 approval, receive_draft, document_file 테이블을 조회합니다.  -->
   <select id="selectApprovalOne" parameterType="map" resultType="com.fit.vo.ApprovalJoinDto">
		SELECT
		    a.approval_no approvalNo,
		    a.doc_title docTitle,
		    a.emp_no empNo,
		    a.first_approval firstApproval,
		    a.mediate_approval mediateApproval,
		    a.final_approval finalApproval,
		    a.approval_date approvalDate,
		    a.approval_reason approvalReason,
		    a.approval_state approvalState,
		    a.document_category documentCategory,
		    a.approval_field approvalField,
		    a.createdate approvalCreateDate, <!-- craetdate -->
		    CASE <!-- 해당 양식에 empNo가 어느 결재라인인지 출력합니다. -->
		        WHEN a.first_approval = #{empNo} THEN '기안자'
		        WHEN a.mediate_approval = #{empNo} THEN '중간승인자'
		        WHEN a.final_approval = #{empNo} THEN '최종승인자'
		    END role, <!-- role -->
		    r.receive_no receiveNo,
		    r.emp_no receiveEmpNo, <!-- empNo -->
		    r.createdate receiveCreateDate, <!-- createdate -->
		    d.doc_file_no docFileNo,
		    d.doc_ori_filename docOriFilename,
		    d.doc_save_filename docSaveFilename,
		    d.doc_filetype docFiletype,
		    d.doc_path docPath,
		    d.createdate documentCreateDate, <!-- createdate -->
		    d.updatedate documentUpdateDate <!-- updatedate -->
		FROM
		    approval a
		LEFT JOIN
		    receive_draft r ON a.approval_no = r.approval_no
		LEFT JOIN
		    document_file d ON a.approval_no = d.approval_no
		WHERE
		    a.approval_no = #{approvalNo}
   </select>
   
   <select id="selectVactionDraftOne" parameterType="int" resultType="com.fit.vo.VacationDraft">
	   SELECT
	    document_no documentNo,
	    approval_no approvalNo,
	    emp_no empNo,
	    doc_title docTitle,
	    doc_content docContent,
	    vacation_name vacationName,
	    vacation_days vacationDays,
	    vacation_start vacationStart,
	    vacation_end vacationEnd,
	    phone_number phoneNumber,
	    createdate createdate,
	    updatedate updatedate
	FROM
	    vacation_draft
	WHERE
	    approval_no = #{approvalNo}
   </select>
</mapper>