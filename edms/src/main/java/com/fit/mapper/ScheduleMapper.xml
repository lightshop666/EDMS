<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fit.mapper.ScheduleMapper">

	<!-- 달력에 출력할 (리스트 or GET)을 보여줄 쿼리 -->
	<select id="selectScheduleListByPage" parameterType="java.util.Map" resultType="com.fit.vo.Schedule">
	    SELECT
	        schedule_no scheduleNo,
	        schedule_start_time scheduleStartTime,
	        schedule_end_time scheduleEndTime,
	        schedule_content scheduleContent,
	        createdate
	    FROM schedule
	    <where>
	    	<!-- 특정 일정번호를 입력받는 경우 해당 일정번호에 해당하는 리스트를 조회한다. -->
	        <if test="scheduleNo != null and scheduleNo != ''">
	            AND schedule_no = #{scheduleNo}
	        </if>
	        <if test="startDate != null and startDate != ''">
		        AND DATE(createdate) &gt;= #{startDate}
		    </if>
		    <if test="endDate != null and endDate != ''">
		        AND DATE(createdate) &lt;= #{endDate}
		    </if>
		    <!-- 검색한 조건이 있을경우 searchCol값을 확인하여 검색 대상 열에 대해 Like절로 일치하는지 확인한다. -->
	        <if test="searchWord != null and searchWord != ''">
	            <choose>
	                <when test="searchCol == 'schedule_content'">
	                    AND schedule_content LIKE CONCAT('%', #{searchWord}, '%')
	                </when>
	            </choose>
	        </if>
	    </where>
     	<!-- 정렬은 col에 의해 어떤 컬럼에 대해 정렬할지 정하고 ascDesc를 통해 오름차순 or 내림차순 중 어떤 경우를 적용할지 정한다. -->
	    <choose>
		    <when test="ascDesc == 'ASC'">
		        ORDER BY ${col} ASC
		    </when>
		    <when test="ascDesc == 'DESC'">
		        ORDER BY ${col} DESC
		    </when>
		    <otherwise>
		        ORDER BY createdate DESC
		    </otherwise>
		</choose>
	    LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 조건에 따른 전체 행의 개수를 확인 -->
	<select id="selectScheduleCount" parameterType="java.util.Map" resultType="int">
	    SELECT 
	        COUNT(*) CNT 
	    FROM schedule
	    <where>
	        <!-- 특정 일정번호를 입력받는 경우 해당 일정번호에 해당하는 리스트를 조회한다. -->
	        <if test="scheduleNo != null and scheduleNo != ''">
	            AND schedule_no = #{scheduleNo}
	        </if>
	        <if test="startDate != null and startDate != ''">
		        AND DATE(createdate) &gt;= #{startDate}
		    </if>
		    <if test="endDate != null and endDate != ''">
		        AND DATE(createdate) &lt;= #{endDate}
		    </if>
		    <!-- 검색한 조건이 있을경우 searchCol값을 확인하여 검색 대상 열에 대해 Like절로 일치하는지 확인한다. -->
	        <if test="searchWord != null and searchWord != ''">
	            <choose>
	                <when test="searchCol == 'schedule_content'">
	                    AND schedule_content LIKE CONCAT('%', #{searchWord}, '%')
	                </when>
	            </choose>
	        </if>
	    </where>
	</select>
	
	<!-- 일정 테이블에서 일정 시작 날짜에 해당하는 행을 조회하는 쿼리 -->
	<select id="findByScheduleDate" resultType="com.fit.vo.Schedule">
		SELECT 
			schedule_no scheduleNo,
	        schedule_start_time scheduleStartTime,
	        schedule_end_time scheduleEndTime,
	        schedule_content scheduleContent,
	        createdate
		FROM schedule 
		WHERE DATE(schedule_start_time) = #{date}
	</select>
	
	<!-- 일정을 추가할 쿼리 -->
	<insert id="insertSchedule" parameterType="com.fit.vo.Schedule">
		<selectKey order="AFTER" keyProperty="scheduleNo" resultType="int">
			SELECT last_insert_id()
		</selectKey>
			INSERT INTO schedule(
				schedule_no
			,	schedule_start_time
			,	schedule_end_time
			,	schedule_content
			,	createdate
			) VALUES(
				#{scheduleNo}
			,	#{scheduleStartTime}
			,	#{scheduleEndTime}
			,	#{scheduleContent}
			,	NOW()
			)
	</insert>
	
	<!-- 일정을 삭제하는 쿼리 -->
	<delete id="deleteSchedule" parameterType="Long">
		DELETE FROM schedule
		WHERE schedule_no = #{scheduleNo}
	</delete>
	
</mapper>