<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fit.mapper.MemberMapper">
	<!-- 인사정보 등록여부 검사 -->
	<select id="empInfoCnt" parameterType="int" resultType="int">
		SELECT
			COUNT(*)
		FROM emp_info
		WHERE emp_no = #{empNo}
	</select>
	
	<!-- 사원번호 중복검사 -->
	<select id="memberInfoCnt" parameterType="int" resultType="int">
		SELECT
			COUNT(*)
		FROM member_info
		WHERE emp_no = #{empNo}
	</select>
	
	<!-- 회원가입 -->
	<insert id="addMember" parameterType="com.fit.vo.MemberInfo">
		INSERT INTO member_info(
			emp_no,
			pw,
			gender,
			phone_number,
			email,
			address,
			createdate,
			updatedate
		) VALUES (
			#{empNo},
			PASSWORD( #{pw} ),
			#{gender},
			#{phoneNumber},
			#{email},
			#{address},
			NOW(),
			NOW()
		)
	</insert>
	
	<!-- 개인정보 조회 -->
	<!-- emp_name을 추출하기 위해 emp_info 테이블과 join -->
	<select id="selectMemberInfo" parameterType="int" resultType="java.util.Map">
		SELECT
			m.emp_no empNo,
			i.emp_name empName,
			m.gender gender,
			m.phone_number phoneNumber,
			m.email email,
			m.address address,
			m.createdate createdate,
			m.updatedate updatedate
		FROM member_info m
			INNER JOIN emp_info i ON m.emp_no = i.emp_no
		WHERE m.emp_no = ${empNo}
	</select>
	
	<!-- 개인정보 파일 조회 -->
	<select id="selectMemberFile" parameterType="java.util.Map" resultType="com.fit.vo.MemberFile">
		SELECT
			member_file_no memberFileNo,
			emp_no empNo,
			file_category fileCategory,
			member_ori_file_name memberOriFileName,
			member_save_file_name memberSaveFileName,
			member_filetype memberFiletype,
			member_path memberPath,
			createdate,
			updatedate
		FROM member_file
		WHERE emp_no = #{empNo}
		AND file_category = #{fileCategory}
	</select>
	
	<!-- 개인정보 수정 -->
	<update id="modifyMember" parameterType="int">
	    UPDATE member_info
	    SET
	        gender = #{gender},
	        phone_number = #{phoneNumber},
	        email = #{email},
	        address = #{address},
	        updatedate = NOW()
	    WHERE emp_no = #{empNo}
	</update>
	
	<!-- 개인정보 파일 입력 -->
	<insert id="addMemberFile" parameterType="map">
    	INSERT INTO member_file (
	    	emp_no
	    	, file_category
	    	, member_ori_file_name
	    	, member_save_file_name
	    	, member_filetype
	    	, member_filesize
	    	, createdate
	    	, updatedate )
    	VALUES (
    		#{empNo}
    		, #{fileCategory}
    		, #{originFilename}
    		, #{saveFilename}
    		, #{filetype}
    		, #{filesize}
    		, NOW()
    		, NOW()
    	)
	</insert>

	<!-- 개인정보 파일 수정 -->
	<delete id="removeMemberFile" parameterType="map">
	    DELETE FROM
	    	member_file
	    WHERE
		    emp_no = #{empNo}
		    AND file_category = #{fileCategory}
	</delete>
	
</mapper>